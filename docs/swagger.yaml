basePath: /api/v1/users
definitions:
  errors.APIError:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  handler.UserCreateRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
  handler.UserResponse:
    properties:
      created:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      isActive:
        type: boolean
      lastName:
        type: string
      updated:
        type: string
    type: object
  handler.UserUpdateRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
info:
  contact: {}
  description: A CRUD example api using Go language
  title: Users example api
  version: 0.0.1
paths:
  /:
    get:
      description: Find all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.UserResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Find all users
      tags:
      - user
    post:
      description: Create an user
      parameters:
      - description: user data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Create an user
      tags:
      - user
  /{id}:
    delete:
      description: Delete an user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Delete an user
      tags:
      - user
    get:
      description: Find an user by its id
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Find an user by its id
      tags:
      - user
    put:
      description: Update an user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: user data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Update an user
      tags:
      - user
swagger: "2.0"
